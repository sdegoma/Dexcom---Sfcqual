@isTest
public class ConsumerOptOutServiceTest {
static testMethod void testUnsubscribe() {

// Create a new email and envelope object
   Messaging.InboundEmail email = new Messaging.InboundEmail() ;
   Messaging.InboundEnvelope env 	= new Messaging.InboundEnvelope();

// Create a new test Consumer and insert it in the Test Method  
  
   Id personRecordTypeID=[select Id from RecordType where (Name='Consumers') and (SobjectType='Account')].Id;
    Account acc1 = new Account(RecordTypeId = personRecordTypeID,PersonHasOptedOutOfEmail=false, PersonEmail = 'rmencke@salesforce.com',  LastName = 'AutoEMailTest', Party_ID__c = '99991', Territory_Code__c = '1234');
    
    Insert acc1; 
   // test with subject that matches the unsubscribe statement
   email.subject = 'test unsubscribe test';
   env.fromAddress = 'rmencke@salesforce.com';
   
   // call the class and test it with the data in the testMethod
   ConsumerOptOutService unsubscribeObj = new ConsumerOptOutService();
   unsubscribeObj.handleInboundEmail(email, env );
						
   }
 
static testMethod void testUnsubscribe2() {

// Create a new email and envelope object
   Messaging.InboundEmail email = new Messaging.InboundEmail();
   Messaging.InboundEnvelope env = new Messaging.InboundEnvelope();

// Create a new test Contact and insert it in the Test Method    
   Contact c = new Contact(firstName='Rasmus', 
   				lastName='Mencke', 
   				Email='rmencke@salesforce.com', 
   				HasOptedOutOfEmail=false);
   insert c;
   Id personRecordTypeID=[select Id from RecordType where (Name='Consumers') and (SobjectType='Account')].Id;
    Account acc1 = new Account(RecordTypeId = personRecordTypeID, PersonEmail ='rmencke@salesforce.com',PersonHasOptedOutOfEmail=false , LastName = 'AutoEMailTest', Party_ID__c = '99991', Territory_Code__c = '1234');
      
    Insert acc1; 
   // Test with a subject that does Not contain unsubscribe
   email.subject = 'test';
   env.fromAddress = 'rmencke@salesforce.com';

   // call the class and test it with the data in the testMethod
   ConsumerOptOutService unsubscribeObj = new ConsumerOptOutService();
   unsubscribeObj.handleInboundEmail(email, env );						
   }    
}